package com.smhrd.servlet;

import java.io.IOException;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


// @ -> annotation (기능이 있는 주석역할)
// url  mapping 방법
// 1. @WebServlet : url-mapping 역할 수행
// 2. web.xml 추가

@WebServlet("/Ex00")
public class Ex00CreateServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	// 자바 - 모든 데이터들을 바이트 형태로 입출력(스트림 - 통로)
	// 입력 : 객체 -> 바이트배열 형태로 변환 (직렬화)
	// 출력 : 바이트배열 -> 객체 (역직렬화)
       
	// 생성자 : 객체 생성(자바 객체)
    public Ex00CreateServlet() {
        super();
    }
    
    // 1. 처음에 딱 한번 호출, 초기값 설정 메소드
    // 서블릿 객체를 생성하고 초기화하는 작업은 비용이 많이 듬
    // -> 다음에 또 요청이 올 때를 위해 이미 생성된 서블릿 객체를 메모리에 남겨둠
	public void init(ServletConfig config) throws ServletException {
		System.out.println("init 호출~");
	}

	public void destroy() {
	}

	// 2. 브라우저(클라이언트)의 요청을 처리, 로직을 쓰는 구간
	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		System.out.println("service 호출~");
		doGet(request, response);
		doPost(request, response);
	}
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		System.out.println("doGet 호출ㅎㅎ");
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		System.out.println("doPost 호출!");
	}

}
